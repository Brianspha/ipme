{
  "_format": "ethers-rs-sol-cache-3",
  "paths": {
    "artifacts": "out",
    "build_infos": "out/build-info",
    "sources": "src",
    "tests": "test",
    "scripts": "script",
    "libraries": [
      "lib",
      "node_modules"
    ]
  },
  "files": {
    "node_modules/@ethsign/sign-protocol-evm/src/core/SP.sol": {
      "lastModificationDate": 1713310368427,
      "contentHash": "a59957b45727d90382777b6359631be1",
      "sourceName": "node_modules/@ethsign/sign-protocol-evm/src/core/SP.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@ethsign\\sign-protocol-evm/src/interfaces/ISP.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/ISPGlobalHook.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/Attestation.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/DataLocation.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/Schema.sol",
        "node_modules/@openzeppelin\\contracts/interfaces/IERC1271.sol",
        "node_modules/@openzeppelin\\contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin\\contracts/proxy/ERC1967/ERC1967Utils.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin\\contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "node_modules/@openzeppelin\\contracts/utils/cryptography/MessageHashUtils.sol",
        "node_modules/@openzeppelin\\contracts/utils/cryptography/SignatureChecker.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "SP": {
          "0.8.23+commit.f704f362.Windows.msvc": "SP.sol\\SP.json"
        }
      }
    },
    "node_modules/@ethsign/sign-protocol-evm/src/interfaces/ISP.sol": {
      "lastModificationDate": 1713310368416,
      "contentHash": "302088b392f5bdb8c069556f92c33c45",
      "sourceName": "node_modules/@ethsign/sign-protocol-evm/src/interfaces/ISP.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/Attestation.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/DataLocation.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/Schema.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ISP": {
          "0.8.23+commit.f704f362.Windows.msvc": "ISP.sol\\ISP.json"
        }
      }
    },
    "node_modules/@ethsign/sign-protocol-evm/src/interfaces/ISPGlobalHook.sol": {
      "lastModificationDate": 1713310368416,
      "contentHash": "b2d37bf830938629677901fd7152c1a9",
      "sourceName": "node_modules/@ethsign/sign-protocol-evm/src/interfaces/ISPGlobalHook.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ISPGlobalHook": {
          "0.8.23+commit.f704f362.Windows.msvc": "ISPGlobalHook.sol\\ISPGlobalHook.json"
        }
      }
    },
    "node_modules/@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol": {
      "lastModificationDate": 1713310368416,
      "contentHash": "38882cde1696aec691c3c373a1afdc6b",
      "sourceName": "node_modules/@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ISPHook": {
          "0.8.23+commit.f704f362.Windows.msvc": "ISPHook.sol\\ISPHook.json"
        }
      }
    },
    "node_modules/@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol": {
      "lastModificationDate": 1713310368416,
      "contentHash": "716667405d83b873d5771aa6419610ae",
      "sourceName": "node_modules/@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IVersionable": {
          "0.8.23+commit.f704f362.Windows.msvc": "IVersionable.sol\\IVersionable.json"
        }
      }
    },
    "node_modules/@ethsign/sign-protocol-evm/src/models/Attestation.sol": {
      "lastModificationDate": 1713310368410,
      "contentHash": "227d21481dc91a96291c18b246c2d443",
      "sourceName": "node_modules/@ethsign/sign-protocol-evm/src/models/Attestation.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@ethsign\\sign-protocol-evm/src/models/DataLocation.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Attestation": {
          "0.8.23+commit.f704f362.Windows.msvc": "Attestation.sol\\Attestation.json"
        }
      }
    },
    "node_modules/@ethsign/sign-protocol-evm/src/models/DataLocation.sol": {
      "lastModificationDate": 1713310368410,
      "contentHash": "f81e45b5d5896801564d9b6dffc993ca",
      "sourceName": "node_modules/@ethsign/sign-protocol-evm/src/models/DataLocation.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "DataLocation": {
          "0.8.23+commit.f704f362.Windows.msvc": "DataLocation.sol\\DataLocation.json"
        }
      }
    },
    "node_modules/@ethsign/sign-protocol-evm/src/models/Schema.sol": {
      "lastModificationDate": 1713310368423,
      "contentHash": "3aa67605248eeb15389e727ec30dbb97",
      "sourceName": "node_modules/@ethsign/sign-protocol-evm/src/models/Schema.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/DataLocation.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Schema": {
          "0.8.23+commit.f704f362.Windows.msvc": "Schema.sol\\Schema.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
      "lastModificationDate": 1713235564682,
      "contentHash": "4c80b7fdf559a9a348e832a57d072a0b",
      "sourceName": "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "AccessControl": {
          "0.8.23+commit.f704f362.Windows.msvc": "AccessControl.sol\\AccessControl.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
      "lastModificationDate": 1713235565449,
      "contentHash": "e3a14b0714caaaa82d58fa0bc3756079",
      "sourceName": "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IAccessControl": {
          "0.8.23+commit.f704f362.Windows.msvc": "IAccessControl.sol\\IAccessControl.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
      "lastModificationDate": 1713235565643,
      "contentHash": "d3c790edc9ccf808a17c5a6cd13614fd",
      "sourceName": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Ownable": {
          "0.8.23+commit.f704f362.Windows.msvc": "Ownable.sol\\Ownable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC1271.sol": {
      "lastModificationDate": 1713235565577,
      "contentHash": "12a8c0358597a0dc191410b1259e61ee",
      "sourceName": "node_modules/@openzeppelin/contracts/interfaces/IERC1271.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC1271": {
          "0.8.23+commit.f704f362.Windows.msvc": "IERC1271.sol\\IERC1271.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol": {
      "lastModificationDate": 1713235565583,
      "contentHash": "f808b485ee0cdc6768ee8385ae5f9a2a",
      "sourceName": "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC165": {
          "0.8.23+commit.f704f362.Windows.msvc": "interfaces\\IERC165.sol\\IERC165.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol": {
      "lastModificationDate": 1713235565604,
      "contentHash": "7f130e0d70179d683e9b9df0dda38a51",
      "sourceName": "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC4906": {
          "0.8.23+commit.f704f362.Windows.msvc": "IERC4906.sol\\IERC4906.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol": {
      "lastModificationDate": 1713235565609,
      "contentHash": "d8d23fc2f55ed934d1a1b91c9afd8526",
      "sourceName": "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC721": {
          "0.8.23+commit.f704f362.Windows.msvc": "interfaces\\IERC721.sol\\IERC721.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
      "lastModificationDate": 1713235564983,
      "contentHash": "5a6f0412127636d802db818a7d6ac404",
      "sourceName": "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC1822Proxiable": {
          "0.8.23+commit.f704f362.Windows.msvc": "draft-IERC1822.sol\\IERC1822Proxiable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
      "lastModificationDate": 1713235565124,
      "contentHash": "4aefc698f77ecbace7f401257dfe182d",
      "sourceName": "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC1155Errors": {
          "0.8.23+commit.f704f362.Windows.msvc": "draft-IERC6093.sol\\IERC1155Errors.json"
        },
        "IERC20Errors": {
          "0.8.23+commit.f704f362.Windows.msvc": "draft-IERC6093.sol\\IERC20Errors.json"
        },
        "IERC721Errors": {
          "0.8.23+commit.f704f362.Windows.msvc": "draft-IERC6093.sol\\IERC721Errors.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/Clones.sol": {
      "lastModificationDate": 1713235564975,
      "contentHash": "3f126cc3806f04f2c7530211ada54b1e",
      "sourceName": "node_modules/@openzeppelin/contracts/proxy/Clones.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Clones": {
          "0.8.23+commit.f704f362.Windows.msvc": "Clones.sol\\Clones.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
      "lastModificationDate": 1713235565201,
      "contentHash": "838bc3ef3bcf0376af7d9b2041989b6a",
      "sourceName": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ERC1967Utils": {
          "0.8.23+commit.f704f362.Windows.msvc": "ERC1967Utils.sol\\ERC1967Utils.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
      "lastModificationDate": 1713235565515,
      "contentHash": "0a5c323fd908535580597848b8e550fb",
      "sourceName": "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IBeacon": {
          "0.8.23+commit.f704f362.Windows.msvc": "IBeacon.sol\\IBeacon.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
      "lastModificationDate": 1713235565571,
      "contentHash": "d70aa5aeb17749b65a9bde4cce2bd72c",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC1155": {
          "0.8.23+commit.f704f362.Windows.msvc": "IERC1155.sol\\IERC1155.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
      "lastModificationDate": 1713235565576,
      "contentHash": "d14616defa6d417fafa47e416e3cec73",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC1155Receiver": {
          "0.8.23+commit.f704f362.Windows.msvc": "IERC1155Receiver.sol\\IERC1155Receiver.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
      "lastModificationDate": 1713235565208,
      "contentHash": "c6375ef25e84c90b3d15f9ec4eef218f",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ERC20": {
          "0.8.23+commit.f704f362.Windows.msvc": "ERC20.sol\\ERC20.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
      "lastModificationDate": 1713235565591,
      "contentHash": "5517c8678c18eb1a8ba58810e7ca39ca",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC20": {
          "0.8.23+commit.f704f362.Windows.msvc": "IERC20.sol\\IERC20.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
      "lastModificationDate": 1713235565592,
      "contentHash": "4c02fa6f7ae7b6c289cef80424f0c875",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC20Metadata": {
          "0.8.23+commit.f704f362.Windows.msvc": "IERC20Metadata.sol\\IERC20Metadata.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
      "lastModificationDate": 1713235565257,
      "contentHash": "1e64e2ad597dc5b2dae11346502baad4",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin\\contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ERC721": {
          "0.8.23+commit.f704f362.Windows.msvc": "ERC721.sol\\ERC721.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
      "lastModificationDate": 1713235565610,
      "contentHash": "5df8fdb527e563085847cad29e3c5f2e",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC721": {
          "0.8.23+commit.f704f362.Windows.msvc": "IERC721.sol\\IERC721.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
      "lastModificationDate": 1713235565617,
      "contentHash": "fc8a9841f4bdd6329c26a00d5e75f4b3",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC721Receiver": {
          "0.8.23+commit.f704f362.Windows.msvc": "IERC721Receiver.sol\\IERC721Receiver.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
      "lastModificationDate": 1713235565270,
      "contentHash": "50d770b698931f015309e77a750f54f6",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/ERC721.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin\\contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ERC721URIStorage": {
          "0.8.23+commit.f704f362.Windows.msvc": "ERC721URIStorage.sol\\ERC721URIStorage.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
      "lastModificationDate": 1713235565615,
      "contentHash": "12c206f185cb951213799561fdcaa40d",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC721Metadata": {
          "0.8.23+commit.f704f362.Windows.msvc": "IERC721Metadata.sol\\IERC721Metadata.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Address.sol": {
      "lastModificationDate": 1713235564700,
      "contentHash": "79c699f80eb8a9b168cb34e37816f894",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/Address.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Address": {
          "0.8.23+commit.f704f362.Windows.msvc": "Address.sol\\Address.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Base64.sol": {
      "lastModificationDate": 1713235564724,
      "contentHash": "89b9633fa53a8d960ba4763727f27421",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/Base64.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Base64": {
          "0.8.23+commit.f704f362.Windows.msvc": "Base64.sol\\Base64.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Context.sol": {
      "lastModificationDate": 1713235564977,
      "contentHash": "67bfbc07588eb8683b3fd8f6f909563e",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/Context.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Context": {
          "0.8.23+commit.f704f362.Windows.msvc": "Context.sol\\Context.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
      "lastModificationDate": 1713235565648,
      "contentHash": "a92331adac11b453a4de0323fc948119",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ReentrancyGuard": {
          "0.8.23+commit.f704f362.Windows.msvc": "ReentrancyGuard.sol\\ReentrancyGuard.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
      "lastModificationDate": 1713235566128,
      "contentHash": "08cbccfefa284405c12b4bfa8c8c9c2b",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "StorageSlot": {
          "0.8.23+commit.f704f362.Windows.msvc": "StorageSlot.sol\\StorageSlot.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
      "lastModificationDate": 1713235566131,
      "contentHash": "ba57ff4ddf1d9cae9d2009792795b7f6",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Strings": {
          "0.8.23+commit.f704f362.Windows.msvc": "Strings.sol\\Strings.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
      "lastModificationDate": 1713235565130,
      "contentHash": "b96e0d7a3c2b185342c7d083d765b61f",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ECDSA": {
          "0.8.23+commit.f704f362.Windows.msvc": "ECDSA.sol\\ECDSA.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
      "lastModificationDate": 1713235565640,
      "contentHash": "9e5eec59eaffa554d6cca561dcb914eb",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "MessageHashUtils": {
          "0.8.23+commit.f704f362.Windows.msvc": "MessageHashUtils.sol\\MessageHashUtils.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol": {
      "lastModificationDate": 1713235566039,
      "contentHash": "67e1b232791e1ea1cf6475bd4aaed191",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/interfaces/IERC1271.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "SignatureChecker": {
          "0.8.23+commit.f704f362.Windows.msvc": "SignatureChecker.sol\\SignatureChecker.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
      "lastModificationDate": 1713235565179,
      "contentHash": "6a55c353946e471d9792965d06208295",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ERC165": {
          "0.8.23+commit.f704f362.Windows.msvc": "ERC165.sol\\ERC165.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol": {
      "lastModificationDate": 1713235565183,
      "contentHash": "39cb7ad93657f9f444653cf94d6fc392",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ERC165Checker": {
          "0.8.23+commit.f704f362.Windows.msvc": "ERC165Checker.sol\\ERC165Checker.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
      "lastModificationDate": 1713235565584,
      "contentHash": "de0163561b417b800d01749cbbe2147e",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "IERC165": {
          "0.8.23+commit.f704f362.Windows.msvc": "IERC165.sol\\IERC165.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
      "lastModificationDate": 1713235565632,
      "contentHash": "718fa8ba0ff269c92e364c1429d9de57",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Math": {
          "0.8.23+commit.f704f362.Windows.msvc": "Math.sol\\Math.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
      "lastModificationDate": 1713235566125,
      "contentHash": "b6c6bdc7aaca4fe5b680760a72e09d3e",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "SignedMath": {
          "0.8.23+commit.f704f362.Windows.msvc": "SignedMath.sol\\SignedMath.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
      "lastModificationDate": 1713235565150,
      "contentHash": "99b208f3f285702e96243d329411c5de",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "EnumerableSet": {
          "0.8.23+commit.f704f362.Windows.msvc": "EnumerableSet.sol\\EnumerableSet.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol": {
      "lastModificationDate": 1713235566034,
      "contentHash": "3f454fad733cc90a30023bc418a41d05",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Ownable2StepUpgradeable": {
          "0.8.23+commit.f704f362.Windows.msvc": "Ownable2StepUpgradeable.sol\\Ownable2StepUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
      "lastModificationDate": 1713235567369,
      "contentHash": "77d30f3cd93f46b80b6f8f1ebc574ee4",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "OwnableUpgradeable": {
          "0.8.23+commit.f704f362.Windows.msvc": "OwnableUpgradeable.sol\\OwnableUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
      "lastModificationDate": 1713235566022,
      "contentHash": "f0cedd674b4863ee90d1521a92ab82df",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "Initializable": {
          "0.8.23+commit.f704f362.Windows.msvc": "Initializable.sol\\Initializable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
      "lastModificationDate": 1713235567434,
      "contentHash": "0488cb927068c0c94b864ea40a34d1ea",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin\\contracts/proxy/ERC1967/ERC1967Utils.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "UUPSUpgradeable": {
          "0.8.23+commit.f704f362.Windows.msvc": "UUPSUpgradeable.sol\\UUPSUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
      "lastModificationDate": 1713235554498,
      "contentHash": "c28aaa25d083a9a55bd9ec9e0b785122",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ContextUpgradeable": {
          "0.8.23+commit.f704f362.Windows.msvc": "ContextUpgradeable.sol\\ContextUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
      "lastModificationDate": 1713235567372,
      "contentHash": "a5bcbeef155f4b5dfb458e420afbaca6",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol"
      ],
      "versionRequirement": "^0.8.20",
      "artifacts": {
        "ReentrancyGuardUpgradeable": {
          "0.8.23+commit.f704f362.Windows.msvc": "ReentrancyGuardUpgradeable.sol\\ReentrancyGuardUpgradeable.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol": {
      "lastModificationDate": 1713235614505,
      "contentHash": "e7a9d5bc3cf044e8bbe2b23a976d82f6",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/IAccessController.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "AccessControlled": {
          "0.8.23+commit.f704f362.Windows.msvc": "AccessControlled.sol\\AccessControlled.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/governance/Governable.sol": {
      "lastModificationDate": 1713235614506,
      "contentHash": "053042d8bfe688c80f0605969adb394e",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/governance/Governable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernance.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "Governable": {
          "0.8.23+commit.f704f362.Windows.msvc": "Governable.sol\\Governable.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/interfaces/IAccessController.sol": {
      "lastModificationDate": 1713235614510,
      "contentHash": "65710ac2ac854a1ad85e5ce52a3c4b66",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/interfaces/IAccessController.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IAccessController": {
          "0.8.23+commit.f704f362.Windows.msvc": "IAccessController.sol\\IAccessController.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol": {
      "lastModificationDate": 1713235614512,
      "contentHash": "f52fd9f07dce3b8a8c7bdd75ff1d5f29",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IIPAccount": {
          "0.8.23+commit.f704f362.Windows.msvc": "IIPAccount.sol\\IIPAccount.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernable.sol": {
      "lastModificationDate": 1713235614599,
      "contentHash": "d140edb99f8592276b0b9c82c9c6af47",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IGovernable": {
          "0.8.23+commit.f704f362.Windows.msvc": "IGovernable.sol\\IGovernable.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernance.sol": {
      "lastModificationDate": 1713235614600,
      "contentHash": "305842dc7c649c838d1139664546781c",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernance.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IGovernance": {
          "0.8.23+commit.f704f362.Windows.msvc": "IGovernance.sol\\IGovernance.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/IRegistrationModule.sol": {
      "lastModificationDate": 1713235614601,
      "contentHash": "4adee782a07a34eaec6679b2174bbf47",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/IRegistrationModule.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/IAccessController.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IKeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IResolver.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/resolvers/IPResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/KeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/ResolverBase.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IRegistrationModule": {
          "0.8.23+commit.f704f362.Windows.msvc": "IRegistrationModule.sol\\IRegistrationModule.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IHookModule.sol": {
      "lastModificationDate": 1713235614695,
      "contentHash": "a6dc3e5f5f1cc06b736c474349a04ef9",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IHookModule.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IHookModule": {
          "0.8.23+commit.f704f362.Windows.msvc": "IHookModule.sol\\IHookModule.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol": {
      "lastModificationDate": 1713235614696,
      "contentHash": "b031fd51a6df90b80a168c0f6c5a3570",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IModule": {
          "0.8.23+commit.f704f362.Windows.msvc": "IModule.sol\\IModule.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/dispute/IDisputeModule.sol": {
      "lastModificationDate": 1713235614698,
      "contentHash": "9fb92b830e2cbb99bcb18aae36fd71eb",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/dispute/IDisputeModule.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IDisputeModule": {
          "0.8.23+commit.f704f362.Windows.msvc": "IDisputeModule.sol\\IDisputeModule.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/ILicensingModule.sol": {
      "lastModificationDate": 1713235614703,
      "contentHash": "b5b16b28b658c13b6284f9c198fbecd2",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/ILicensingModule.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155.sol",
        "node_modules/@openzeppelin\\contracts/utils/ReentrancyGuard.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/governance/Governable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernance.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/dispute/IDisputeModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/ILicensingModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/IRoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/ILicenseRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/Licensing.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/royalty/RoyaltyModule.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "ILicensingModule": {
          "0.8.23+commit.f704f362.Windows.msvc": "ILicensingModule.sol\\ILicensingModule.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPILPolicyFrameworkManager.sol": {
      "lastModificationDate": 1713235614705,
      "contentHash": "439cb0d0f6afb5da5ee748b9b3942420",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPILPolicyFrameworkManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPolicyFrameworkManager.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IPILPolicyFrameworkManager": {
          "0.8.23+commit.f704f362.Windows.msvc": "IPILPolicyFrameworkManager.sol\\IPILPolicyFrameworkManager.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPolicyFrameworkManager.sol": {
      "lastModificationDate": 1713235614708,
      "contentHash": "764c18c48e8868d820851102fd37c77d",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPolicyFrameworkManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IPolicyFrameworkManager": {
          "0.8.23+commit.f704f362.Windows.msvc": "IPolicyFrameworkManager.sol\\IPolicyFrameworkManager.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/IRoyaltyModule.sol": {
      "lastModificationDate": 1713235614709,
      "contentHash": "4e5cdcd414826f2898e58a39e6b24b2c",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/IRoyaltyModule.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IRoyaltyModule": {
          "0.8.23+commit.f704f362.Windows.msvc": "IRoyaltyModule.sol\\IRoyaltyModule.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol": {
      "lastModificationDate": 1713235614784,
      "contentHash": "b22a8c93fa4f5dcc1655426fd950e1ee",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IRoyaltyPolicy": {
          "0.8.23+commit.f704f362.Windows.msvc": "IRoyaltyPolicy.sol\\IRoyaltyPolicy.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol": {
      "lastModificationDate": 1713235614604,
      "contentHash": "01d5486da88a3e8cc84a59070103dc35",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IIPAccountRegistry": {
          "0.8.23+commit.f704f362.Windows.msvc": "IIPAccountRegistry.sol\\IIPAccountRegistry.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAssetRegistry.sol": {
      "lastModificationDate": 1713235614605,
      "contentHash": "a32652585c14dc4a440bcb2d9d71e243",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAssetRegistry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/IAccessController.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/IRegistrationModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAssetRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IModuleRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProvider.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProviderMigratable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IKeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IResolver.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/resolvers/IPResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/KeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/ResolverBase.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IIPAssetRegistry": {
          "0.8.23+commit.f704f362.Windows.msvc": "IIPAssetRegistry.sol\\IIPAssetRegistry.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/ILicenseRegistry.sol": {
      "lastModificationDate": 1713235614606,
      "contentHash": "c6e9d05885cd73df20a9155edbe3d71b",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/ILicenseRegistry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155.sol",
        "node_modules/@openzeppelin\\contracts/utils/ReentrancyGuard.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/governance/Governable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernance.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/dispute/IDisputeModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/ILicensingModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/IRoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/ILicenseRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/Licensing.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/royalty/RoyaltyModule.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "ILicenseRegistry": {
          "0.8.23+commit.f704f362.Windows.msvc": "ILicenseRegistry.sol\\ILicenseRegistry.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IModuleRegistry.sol": {
      "lastModificationDate": 1713235614608,
      "contentHash": "3e7fb54a4f7bac3c4ebbb66421523960",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IModuleRegistry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IModuleRegistry": {
          "0.8.23+commit.f704f362.Windows.msvc": "IModuleRegistry.sol\\IModuleRegistry.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProvider.sol": {
      "lastModificationDate": 1713235614711,
      "contentHash": "3110d72eaf1e5ea68665b3df2f8be364",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProvider.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IMetadataProvider": {
          "0.8.23+commit.f704f362.Windows.msvc": "IMetadataProvider.sol\\IMetadataProvider.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProviderMigratable.sol": {
      "lastModificationDate": 1713235614712,
      "contentHash": "1d750698745f5a5d50ebc013b043dbed",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProviderMigratable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/IAccessController.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/IRegistrationModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAssetRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IModuleRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProvider.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProviderMigratable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IKeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IResolver.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/resolvers/IPResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/KeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/ResolverBase.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IMetadataProviderMigratable": {
          "0.8.23+commit.f704f362.Windows.msvc": "IMetadataProviderMigratable.sol\\IMetadataProviderMigratable.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IKeyValueResolver.sol": {
      "lastModificationDate": 1713235614610,
      "contentHash": "13faaf7948fe406c2ab8860b66699e8d",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IKeyValueResolver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IKeyValueResolver": {
          "0.8.23+commit.f704f362.Windows.msvc": "IKeyValueResolver.sol\\IKeyValueResolver.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IResolver.sol": {
      "lastModificationDate": 1713235614611,
      "contentHash": "c34c8d6e738fae4204ee3c8a5330042b",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IResolver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IResolver": {
          "0.8.23+commit.f704f362.Windows.msvc": "IResolver.sol\\IResolver.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/lib/AccessPermission.sol": {
      "lastModificationDate": 1713235614515,
      "contentHash": "ea26e7ac51d5015b428126fd68cfc771",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/lib/AccessPermission.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "AccessPermission": {
          "0.8.23+commit.f704f362.Windows.msvc": "AccessPermission.sol\\AccessPermission.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/lib/DataUniqueness.sol": {
      "lastModificationDate": 1713235614518,
      "contentHash": "8d2328dcda17a9272548fcb4336c1b75",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/lib/DataUniqueness.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "DataUniqueness": {
          "0.8.23+commit.f704f362.Windows.msvc": "DataUniqueness.sol\\DataUniqueness.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol": {
      "lastModificationDate": 1713235614522,
      "contentHash": "7213da7370bf7576a075e291df5ecdde",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "Errors": {
          "0.8.23+commit.f704f362.Windows.msvc": "lib\\Errors.sol\\Errors.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol": {
      "lastModificationDate": 1713235614523,
      "contentHash": "ab88bb4c4bdd5a5fd870713bd1563b6a",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "GovernanceLib": {
          "0.8.23+commit.f704f362.Windows.msvc": "GovernanceLib.sol\\GovernanceLib.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/lib/IP.sol": {
      "lastModificationDate": 1713235614525,
      "contentHash": "89aff5469311f087319075cfef41e7f5",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/lib/IP.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IP": {
          "0.8.23+commit.f704f362.Windows.msvc": "IP.sol\\IP.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/lib/Licensing.sol": {
      "lastModificationDate": 1713235614527,
      "contentHash": "533eef51ffee1ed0d68b05460c000e67",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/lib/Licensing.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "Licensing": {
          "0.8.23+commit.f704f362.Windows.msvc": "Licensing.sol\\Licensing.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/lib/PILFlavors.sol": {
      "lastModificationDate": 1713235614529,
      "contentHash": "bb4ef9cc0dc2fa365564220316c8a9bc",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/lib/PILFlavors.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155.sol",
        "node_modules/@openzeppelin\\contracts/utils/ReentrancyGuard.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/governance/Governable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernance.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/dispute/IDisputeModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/ILicensingModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/IPILPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/IRoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/ILicenseRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/Licensing.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/royalty/RoyaltyModule.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "PILFlavors": {
          "0.8.23+commit.f704f362.Windows.msvc": "PILFlavors.sol\\PILFlavors.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/lib/PILFrameworkErrors.sol": {
      "lastModificationDate": 1713235614530,
      "contentHash": "79e4c24f412e114a005947ba2d8b3778",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/lib/PILFrameworkErrors.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "PILFrameworkErrors": {
          "0.8.23+commit.f704f362.Windows.msvc": "PILFrameworkErrors.sol\\PILFrameworkErrors.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol": {
      "lastModificationDate": 1713235614613,
      "contentHash": "13a53b62f26e5b328d41847856dfca3d",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "Module": {
          "0.8.23+commit.f704f362.Windows.msvc": "Module.sol\\Module.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol": {
      "lastModificationDate": 1713235614615,
      "contentHash": "1af98885689c823a0a8e2128bad63963",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IPAccountChecker": {
          "0.8.23+commit.f704f362.Windows.msvc": "IPAccountChecker.sol\\IPAccountChecker.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol": {
      "lastModificationDate": 1713235614532,
      "contentHash": "ebe22f6515caa22f10af15d78f1db570",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "BaseModule": {
          "0.8.23+commit.f704f362.Windows.msvc": "BaseModule.sol\\BaseModule.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/modules/RegistrationModule.sol": {
      "lastModificationDate": 1713235614534,
      "contentHash": "cbf7f802047a7b0bcfb19eb1ef4d0ad2",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/modules/RegistrationModule.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin\\contracts/utils/ReentrancyGuard.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol",
        "node_modules/@story-protocol/protocol-core/contracts/governance/Governable.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/IAccessController.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernance.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/IRegistrationModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/dispute/IDisputeModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/ILicensingModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/IRoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAssetRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/ILicenseRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IModuleRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProvider.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProviderMigratable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IKeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IResolver.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/IP.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/Licensing.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/royalty/RoyaltyModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/resolvers/IPResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/KeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/ResolverBase.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "RegistrationModule": {
          "0.8.23+commit.f704f362.Windows.msvc": "RegistrationModule.sol\\RegistrationModule.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/BasePolicyFrameworkManager.sol": {
      "lastModificationDate": 1713235614622,
      "contentHash": "764176be03b75e9de147b87cd3649326",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/BasePolicyFrameworkManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155.sol",
        "node_modules/@openzeppelin\\contracts/utils/ReentrancyGuard.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/governance/Governable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernance.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/dispute/IDisputeModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/ILicensingModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/IRoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/ILicenseRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/Licensing.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/LicensingModuleAware.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/royalty/RoyaltyModule.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "BasePolicyFrameworkManager": {
          "0.8.23+commit.f704f362.Windows.msvc": "BasePolicyFrameworkManager.sol\\BasePolicyFrameworkManager.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/LicensingModule.sol": {
      "lastModificationDate": 1713235614625,
      "contentHash": "8603a8287279bdb941729b654ead9627",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/LicensingModule.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin\\contracts/utils/ReentrancyGuard.sol",
        "node_modules/@openzeppelin\\contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/@openzeppelin\\contracts/utils/structs/EnumerableSet.sol",
        "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol",
        "node_modules/@story-protocol/protocol-core/contracts/governance/Governable.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/IAccessController.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernance.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/dispute/IDisputeModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/ILicensingModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/IRoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/ILicenseRegistry.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/DataUniqueness.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/Licensing.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/royalty/RoyaltyModule.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "LicensingModule": {
          "0.8.23+commit.f704f362.Windows.msvc": "LicensingModule.sol\\LicensingModule.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/LicensingModuleAware.sol": {
      "lastModificationDate": 1713235614626,
      "contentHash": "3393b36bd747c4d9bd8ce0a130dbfbcc",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/LicensingModuleAware.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155.sol",
        "node_modules/@openzeppelin\\contracts/utils/ReentrancyGuard.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/governance/Governable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernance.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/dispute/IDisputeModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/ILicensingModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/IRoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/ILicenseRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/Licensing.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/royalty/RoyaltyModule.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "LicensingModuleAware": {
          "0.8.23+commit.f704f362.Windows.msvc": "LicensingModuleAware.sol\\LicensingModuleAware.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/PILPolicyFrameworkManager.sol": {
      "lastModificationDate": 1713235614628,
      "contentHash": "13350936c9d6209b6ada346c20070b31",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/PILPolicyFrameworkManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin\\contracts/utils/ReentrancyGuard.sol",
        "node_modules/@openzeppelin\\contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol",
        "node_modules/@story-protocol/protocol-core/contracts/governance/Governable.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/IAccessController.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernance.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IHookModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/dispute/IDisputeModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/ILicensingModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/IPILPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/IRoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/ILicenseRegistry.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/Licensing.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/PILFrameworkErrors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/BasePolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/LicensingModuleAware.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/parameter-helpers/LicensorApprovalChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/royalty/RoyaltyModule.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "PILPolicyFrameworkManager": {
          "0.8.23+commit.f704f362.Windows.msvc": "PILPolicyFrameworkManager.sol\\PILPolicyFrameworkManager.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/parameter-helpers/LicensorApprovalChecker.sol": {
      "lastModificationDate": 1713235614716,
      "contentHash": "919cdbead1bf6ee3d4f6c6dd2b8685ee",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/parameter-helpers/LicensorApprovalChecker.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin\\contracts/utils/ReentrancyGuard.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol",
        "node_modules/@story-protocol/protocol-core/contracts/governance/Governable.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/IAccessController.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernance.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/dispute/IDisputeModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/ILicensingModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/IRoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/ILicenseRegistry.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/Licensing.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/royalty/RoyaltyModule.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "LicensorApprovalChecker": {
          "0.8.23+commit.f704f362.Windows.msvc": "LicensorApprovalChecker.sol\\LicensorApprovalChecker.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/modules/royalty/RoyaltyModule.sol": {
      "lastModificationDate": 1713235614629,
      "contentHash": "175d49482e8abc2195a26f13c271e651",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/modules/royalty/RoyaltyModule.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/utils/ReentrancyGuard.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/governance/Governable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernance.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/IRoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "RoyaltyModule": {
          "0.8.23+commit.f704f362.Windows.msvc": "RoyaltyModule.sol\\RoyaltyModule.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/registries/IPAccountRegistry.sol": {
      "lastModificationDate": 1713235614535,
      "contentHash": "b406ce452f57f5e81dc95258b9c4b72a",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/registries/IPAccountRegistry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/erc6551\\interfaces/IERC6551Registry.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IPAccountRegistry": {
          "0.8.23+commit.f704f362.Windows.msvc": "IPAccountRegistry.sol\\IPAccountRegistry.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/registries/IPAssetRegistry.sol": {
      "lastModificationDate": 1713235614540,
      "contentHash": "6bd007f71d1d183ca9073feefbedda30",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/registries/IPAssetRegistry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin\\contracts/utils/ReentrancyGuard.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol",
        "node_modules/@story-protocol/protocol-core/contracts/governance/Governable.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/IAccessController.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernance.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/IRegistrationModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/dispute/IDisputeModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/ILicensingModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/IRoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAssetRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/ILicenseRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IModuleRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProvider.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProviderMigratable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IKeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IResolver.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/IP.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/Licensing.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/royalty/RoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/IPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/metadata/MetadataProviderBase.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/metadata/MetadataProviderV1.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/resolvers/IPResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/KeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/ResolverBase.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol",
        "node_modules/erc6551\\interfaces/IERC6551Registry.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IPAssetRegistry": {
          "0.8.23+commit.f704f362.Windows.msvc": "IPAssetRegistry.sol\\IPAssetRegistry.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/registries/metadata/MetadataProviderBase.sol": {
      "lastModificationDate": 1713235614633,
      "contentHash": "a19eb50b8cacd9ce5dcc5ba7154630ab",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/registries/metadata/MetadataProviderBase.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/IAccessController.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/IRegistrationModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAssetRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IModuleRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProvider.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProviderMigratable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IKeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IResolver.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/resolvers/IPResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/KeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/ResolverBase.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "MetadataProviderBase": {
          "0.8.23+commit.f704f362.Windows.msvc": "MetadataProviderBase.sol\\MetadataProviderBase.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/registries/metadata/MetadataProviderV1.sol": {
      "lastModificationDate": 1713235614636,
      "contentHash": "ed6471ad78a792eba8f3de521bfecb9d",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/registries/metadata/MetadataProviderV1.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/IAccessController.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/IRegistrationModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAssetRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IModuleRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProvider.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProviderMigratable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IKeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IResolver.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/IP.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/metadata/MetadataProviderBase.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/resolvers/IPResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/KeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/ResolverBase.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "MetadataProviderV1": {
          "0.8.23+commit.f704f362.Windows.msvc": "MetadataProviderV1.sol\\MetadataProviderV1.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/resolvers/IPResolver.sol": {
      "lastModificationDate": 1713235614547,
      "contentHash": "58bbe7419d862a4425f7405ad57c0444",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/resolvers/IPResolver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/IAccessController.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IKeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IResolver.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/KeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/ResolverBase.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "IPResolver": {
          "0.8.23+commit.f704f362.Windows.msvc": "IPResolver.sol\\IPResolver.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/resolvers/KeyValueResolver.sol": {
      "lastModificationDate": 1713235614549,
      "contentHash": "f257e854e62445cd95ed80f062bc20d4",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/resolvers/KeyValueResolver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/IAccessController.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IKeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IResolver.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/ResolverBase.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "KeyValueResolver": {
          "0.8.23+commit.f704f362.Windows.msvc": "KeyValueResolver.sol\\KeyValueResolver.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-core/contracts/resolvers/ResolverBase.sol": {
      "lastModificationDate": 1713235614552,
      "contentHash": "98e33708992b7414fdcd915fe035d182",
      "sourceName": "node_modules/@story-protocol/protocol-core/contracts/resolvers/ResolverBase.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/IAccessController.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IResolver.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol"
      ],
      "versionRequirement": "=0.8.23",
      "artifacts": {
        "ResolverBase": {
          "0.8.23+commit.f704f362.Windows.msvc": "ResolverBase.sol\\ResolverBase.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-periphery/contracts/StoryProtocolGateway.sol": {
      "lastModificationDate": 1713235549472,
      "contentHash": "b9fcb42d52a31d9a3fd9a74dda02e6d1",
      "sourceName": "node_modules/@story-protocol/protocol-periphery/contracts/StoryProtocolGateway.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
        "node_modules/@openzeppelin\\contracts/proxy/Clones.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "node_modules/@openzeppelin\\contracts/utils/Base64.sol",
        "node_modules/@openzeppelin\\contracts/utils/ReentrancyGuard.sol",
        "node_modules/@openzeppelin\\contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol",
        "node_modules/@story-protocol/protocol-core/contracts/governance/Governable.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/IAccessController.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernance.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/IRegistrationModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IHookModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/dispute/IDisputeModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/ILicensingModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/IPILPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/IRoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAssetRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/ILicenseRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IModuleRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProvider.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProviderMigratable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IKeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IResolver.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/IP.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/Licensing.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/PILFrameworkErrors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/BasePolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/LicensingModuleAware.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/modules/licensing/PILPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/parameter-helpers/LicensorApprovalChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/royalty/RoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/IPAccountRegistry.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/registries/IPAssetRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/metadata/MetadataProviderBase.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/metadata/MetadataProviderV1.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/resolvers/IPResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/KeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/ResolverBase.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolDrop.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolGateway.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolToken.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721MetadataProvider.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721SPNFT.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Metadata.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/SPG.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721Cloneable.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721MetadataProvider.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721SPNFT.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721SPNFTFactory.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol",
        "node_modules/erc6551\\interfaces/IERC6551Registry.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "StoryProtocolGateway": {
          "0.8.23+commit.f704f362.Windows.msvc": "StoryProtocolGateway.sol\\StoryProtocolGateway.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolDrop.sol": {
      "lastModificationDate": 1713235549683,
      "contentHash": "6c7aaec5af66068428b9c8613000bea6",
      "sourceName": "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolDrop.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/SPG.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "IStoryProtocolDrop": {
          "0.8.23+commit.f704f362.Windows.msvc": "IStoryProtocolDrop.sol\\IStoryProtocolDrop.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolGateway.sol": {
      "lastModificationDate": 1713235549730,
      "contentHash": "27f280e1ec6abcec15a7b20cd01fdc78",
      "sourceName": "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolGateway.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolDrop.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Metadata.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/SPG.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "IStoryProtocolGateway": {
          "0.8.23+commit.f704f362.Windows.msvc": "IStoryProtocolGateway.sol\\IStoryProtocolGateway.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolToken.sol": {
      "lastModificationDate": 1713235549744,
      "contentHash": "e049371fb42bf44230f11758d77ced64",
      "sourceName": "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/SPG.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "IStoryProtocolToken": {
          "0.8.23+commit.f704f362.Windows.msvc": "IStoryProtocolToken.sol\\IStoryProtocolToken.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721MetadataProvider.sol": {
      "lastModificationDate": 1713235550110,
      "contentHash": "98e982ee7b540329f6c2fba305263af1",
      "sourceName": "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721MetadataProvider.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "IERC721MetadataProvider": {
          "0.8.23+commit.f704f362.Windows.msvc": "IERC721MetadataProvider.sol\\IERC721MetadataProvider.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721SPNFT.sol": {
      "lastModificationDate": 1713235550124,
      "contentHash": "320752341728befdd40b447e7152d3e3",
      "sourceName": "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721SPNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolToken.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/SPG.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "IERC721SPNFT": {
          "0.8.23+commit.f704f362.Windows.msvc": "IERC721SPNFT.sol\\IERC721SPNFT.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-periphery/contracts/lib/Errors.sol": {
      "lastModificationDate": 1713235549762,
      "contentHash": "e03d314bdf066612c267265103f6ad7b",
      "sourceName": "node_modules/@story-protocol/protocol-periphery/contracts/lib/Errors.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "Errors": {
          "0.8.23+commit.f704f362.Windows.msvc": "contracts\\lib\\Errors.sol\\Errors.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-periphery/contracts/lib/Metadata.sol": {
      "lastModificationDate": 1713235549788,
      "contentHash": "731eb777e7b03fb86db93d45c7e7431f",
      "sourceName": "node_modules/@story-protocol/protocol-periphery/contracts/lib/Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "Metadata": {
          "0.8.23+commit.f704f362.Windows.msvc": "Metadata.sol\\Metadata.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-periphery/contracts/lib/SPG.sol": {
      "lastModificationDate": 1713235549803,
      "contentHash": "bce3e37aa10f1e5e9e90ff3cb105653c",
      "sourceName": "node_modules/@story-protocol/protocol-periphery/contracts/lib/SPG.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "SPG": {
          "0.8.23+commit.f704f362.Windows.msvc": "SPG.sol\\SPG.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721Cloneable.sol": {
      "lastModificationDate": 1713235549842,
      "contentHash": "9dbb61762d03d6c707cf88c782ccf918",
      "sourceName": "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721Cloneable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Errors.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "ERC721Cloneable": {
          "0.8.23+commit.f704f362.Windows.msvc": "ERC721Cloneable.sol\\ERC721Cloneable.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721MetadataProvider.sol": {
      "lastModificationDate": 1713235549863,
      "contentHash": "bfb58fec403498e8f9775144c9e8734e",
      "sourceName": "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721MetadataProvider.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "node_modules/@openzeppelin\\contracts/utils/Base64.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolToken.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721MetadataProvider.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721SPNFT.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Metadata.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/SPG.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "ERC721MetadataProvider": {
          "0.8.23+commit.f704f362.Windows.msvc": "ERC721MetadataProvider.sol\\ERC721MetadataProvider.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721SPNFT.sol": {
      "lastModificationDate": 1713235549876,
      "contentHash": "747a3d7ff5eac78b08f5481492ae5dcd",
      "sourceName": "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721SPNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolDrop.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolGateway.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolToken.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721MetadataProvider.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721SPNFT.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Metadata.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/SPG.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721Cloneable.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "ERC721SPNFT": {
          "0.8.23+commit.f704f362.Windows.msvc": "ERC721SPNFT.sol\\ERC721SPNFT.json"
        }
      }
    },
    "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721SPNFTFactory.sol": {
      "lastModificationDate": 1713235549884,
      "contentHash": "3e06d02784242dd2cfb29e09bad98f93",
      "sourceName": "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721SPNFTFactory.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/proxy/Clones.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "node_modules/@openzeppelin\\contracts/utils/Base64.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolDrop.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolGateway.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolToken.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721MetadataProvider.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721SPNFT.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Metadata.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/SPG.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721Cloneable.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721MetadataProvider.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721SPNFT.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "ERC721SPNFTFactory": {
          "0.8.23+commit.f704f362.Windows.msvc": "ERC721SPNFTFactory.sol\\ERC721SPNFTFactory.json"
        }
      }
    },
    "node_modules/ds-test/src/test.sol": {
      "lastModificationDate": 1713235578036,
      "contentHash": "9febff9d09f18af5306669dc276c4c43",
      "sourceName": "node_modules/ds-test/src/test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "DSTest": {
          "0.8.23+commit.f704f362.Windows.msvc": "test.sol\\DSTest.json"
        }
      }
    },
    "node_modules/erc6551/interfaces/IERC6551Account.sol": {
      "lastModificationDate": 1713235568139,
      "contentHash": "0a76f1b08a03d2448d88a429a8352b28",
      "sourceName": "node_modules/erc6551/interfaces/IERC6551Account.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC6551Account": {
          "0.8.23+commit.f704f362.Windows.msvc": "IERC6551Account.sol\\IERC6551Account.json"
        }
      }
    },
    "node_modules/erc6551/interfaces/IERC6551Registry.sol": {
      "lastModificationDate": 1713235568143,
      "contentHash": "d2562a680578e6ee9105748b891d7c94",
      "sourceName": "node_modules/erc6551/interfaces/IERC6551Registry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC6551Registry": {
          "0.8.23+commit.f704f362.Windows.msvc": "IERC6551Registry.sol\\IERC6551Registry.json"
        }
      }
    },
    "node_modules/forge-std/src/Base.sol": {
      "lastModificationDate": 1713235587325,
      "contentHash": "ee13c050b1914464f1d3f90cde90204b",
      "sourceName": "node_modules/forge-std/src/Base.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "CommonBase": {
          "0.8.23+commit.f704f362.Windows.msvc": "Base.sol\\CommonBase.json"
        },
        "ScriptBase": {
          "0.8.23+commit.f704f362.Windows.msvc": "Base.sol\\ScriptBase.json"
        },
        "TestBase": {
          "0.8.23+commit.f704f362.Windows.msvc": "Base.sol\\TestBase.json"
        }
      }
    },
    "node_modules/forge-std/src/Script.sol": {
      "lastModificationDate": 1713235587393,
      "contentHash": "ba325c778a7da8a21c2136aa32763c14",
      "sourceName": "node_modules/forge-std/src/Script.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/forge-std/src/Base.sol",
        "node_modules/forge-std/src/StdChains.sol",
        "node_modules/forge-std/src/StdCheats.sol",
        "node_modules/forge-std/src\\StdJson.sol",
        "node_modules/forge-std/src/StdMath.sol",
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/StdStyle.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/console2.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/forge-std/src/mocks/MockERC20.sol",
        "node_modules/forge-std/src/mocks/MockERC721.sol",
        "node_modules/forge-std/src/safeconsole.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Script": {
          "0.8.23+commit.f704f362.Windows.msvc": "Script.sol\\Script.json"
        }
      }
    },
    "node_modules/forge-std/src/StdAssertions.sol": {
      "lastModificationDate": 1713235587397,
      "contentHash": "6cc2858240bcd443debbbf075490e325",
      "sourceName": "node_modules/forge-std/src/StdAssertions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/ds-test/src\\test.sol",
        "node_modules/forge-std/src/StdMath.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdAssertions": {
          "0.8.23+commit.f704f362.Windows.msvc": "StdAssertions.sol\\StdAssertions.json"
        }
      }
    },
    "node_modules/forge-std/src/StdChains.sol": {
      "lastModificationDate": 1713235587397,
      "contentHash": "f7ec55b5333e3d0687535fa29695e9c6",
      "sourceName": "node_modules/forge-std/src/StdChains.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdChains": {
          "0.8.23+commit.f704f362.Windows.msvc": "StdChains.sol\\StdChains.json"
        }
      }
    },
    "node_modules/forge-std/src/StdCheats.sol": {
      "lastModificationDate": 1713235587400,
      "contentHash": "7922ae0087a21ee3cdb97137be18c06c",
      "sourceName": "node_modules/forge-std/src/StdCheats.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console2.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdCheats": {
          "0.8.23+commit.f704f362.Windows.msvc": "StdCheats.sol\\StdCheats.json"
        },
        "StdCheatsSafe": {
          "0.8.23+commit.f704f362.Windows.msvc": "StdCheats.sol\\StdCheatsSafe.json"
        }
      }
    },
    "node_modules/forge-std/src/StdError.sol": {
      "lastModificationDate": 1713235587401,
      "contentHash": "64c896e1276a291776e5ea5aecb3870a",
      "sourceName": "node_modules/forge-std/src/StdError.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdError": {
          "0.8.23+commit.f704f362.Windows.msvc": "StdError.sol\\stdError.json"
        }
      }
    },
    "node_modules/forge-std/src/StdInvariant.sol": {
      "lastModificationDate": 1713235587402,
      "contentHash": "0a580d6fac69e9d4b6504f747f3c0c24",
      "sourceName": "node_modules/forge-std/src/StdInvariant.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdInvariant": {
          "0.8.23+commit.f704f362.Windows.msvc": "StdInvariant.sol\\StdInvariant.json"
        }
      }
    },
    "node_modules/forge-std/src/StdJson.sol": {
      "lastModificationDate": 1713235587404,
      "contentHash": "a341308627b7eeab7589534daad58186",
      "sourceName": "node_modules/forge-std/src/StdJson.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "stdJson": {
          "0.8.23+commit.f704f362.Windows.msvc": "StdJson.sol\\stdJson.json"
        }
      }
    },
    "node_modules/forge-std/src/StdMath.sol": {
      "lastModificationDate": 1713235587405,
      "contentHash": "9da8f453eba6bb98f3d75bc6822bfb29",
      "sourceName": "node_modules/forge-std/src/StdMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdMath": {
          "0.8.23+commit.f704f362.Windows.msvc": "StdMath.sol\\stdMath.json"
        }
      }
    },
    "node_modules/forge-std/src/StdStorage.sol": {
      "lastModificationDate": 1713235587406,
      "contentHash": "abd6f3379e6e2a7979b18abc21aea0c1",
      "sourceName": "node_modules/forge-std/src/StdStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdStorage": {
          "0.8.23+commit.f704f362.Windows.msvc": "StdStorage.sol\\stdStorage.json"
        },
        "stdStorageSafe": {
          "0.8.23+commit.f704f362.Windows.msvc": "StdStorage.sol\\stdStorageSafe.json"
        }
      }
    },
    "node_modules/forge-std/src/StdStyle.sol": {
      "lastModificationDate": 1713235587407,
      "contentHash": "6281165a12aa639705c691fccefd855e",
      "sourceName": "node_modules/forge-std/src/StdStyle.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "StdStyle": {
          "0.8.23+commit.f704f362.Windows.msvc": "StdStyle.sol\\StdStyle.json"
        }
      }
    },
    "node_modules/forge-std/src/StdUtils.sol": {
      "lastModificationDate": 1713235587411,
      "contentHash": "2ace460f60242ec59c9310db966aee97",
      "sourceName": "node_modules/forge-std/src/StdUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/forge-std/src/mocks/MockERC20.sol",
        "node_modules/forge-std/src/mocks/MockERC721.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdUtils": {
          "0.8.23+commit.f704f362.Windows.msvc": "StdUtils.sol\\StdUtils.json"
        }
      }
    },
    "node_modules/forge-std/src/Test.sol": {
      "lastModificationDate": 1713235587412,
      "contentHash": "15866901137b5670eabf31362523bd28",
      "sourceName": "node_modules/forge-std/src/Test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/ds-test/src\\test.sol",
        "node_modules/forge-std/src/Base.sol",
        "node_modules/forge-std/src/StdAssertions.sol",
        "node_modules/forge-std/src/StdChains.sol",
        "node_modules/forge-std/src/StdCheats.sol",
        "node_modules/forge-std/src/StdError.sol",
        "node_modules/forge-std/src/StdInvariant.sol",
        "node_modules/forge-std/src\\StdJson.sol",
        "node_modules/forge-std/src/StdMath.sol",
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/StdStyle.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/console2.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/forge-std/src/mocks/MockERC20.sol",
        "node_modules/forge-std/src/mocks/MockERC721.sol",
        "node_modules/forge-std/src/safeconsole.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Test": {
          "0.8.23+commit.f704f362.Windows.msvc": "Test.sol\\Test.json"
        }
      }
    },
    "node_modules/forge-std/src/Vm.sol": {
      "lastModificationDate": 1713235587416,
      "contentHash": "c791ff15c3c9d600bd396c7ae4ee836c",
      "sourceName": "node_modules/forge-std/src/Vm.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Vm": {
          "0.8.23+commit.f704f362.Windows.msvc": "Vm.sol\\Vm.json"
        },
        "VmSafe": {
          "0.8.23+commit.f704f362.Windows.msvc": "Vm.sol\\VmSafe.json"
        }
      }
    },
    "node_modules/forge-std/src/console.sol": {
      "lastModificationDate": 1713235587328,
      "contentHash": "100b8a33b917da1147740d7ab8b0ded3",
      "sourceName": "node_modules/forge-std/src/console.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console": {
          "0.8.23+commit.f704f362.Windows.msvc": "console.sol\\console.json"
        }
      }
    },
    "node_modules/forge-std/src/console2.sol": {
      "lastModificationDate": 1713235587330,
      "contentHash": "491ca717c1915995e78cc361485a3067",
      "sourceName": "node_modules/forge-std/src/console2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console2": {
          "0.8.23+commit.f704f362.Windows.msvc": "console2.sol\\console2.json"
        }
      }
    },
    "node_modules/forge-std/src/interfaces/IMulticall3.sol": {
      "lastModificationDate": 1713235587340,
      "contentHash": "7b131ca1ca32ef6378b7b9ad5488b901",
      "sourceName": "node_modules/forge-std/src/interfaces/IMulticall3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "IMulticall3": {
          "0.8.23+commit.f704f362.Windows.msvc": "IMulticall3.sol\\IMulticall3.json"
        }
      }
    },
    "node_modules/forge-std/src/mocks/MockERC20.sol": {
      "lastModificationDate": 1713235587342,
      "contentHash": "9ec848e74c56e40afdd01ac0c873dc3b",
      "sourceName": "node_modules/forge-std/src/mocks/MockERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "MockERC20": {
          "0.8.23+commit.f704f362.Windows.msvc": "MockERC20.sol\\MockERC20.json"
        }
      }
    },
    "node_modules/forge-std/src/mocks/MockERC721.sol": {
      "lastModificationDate": 1713235587342,
      "contentHash": "b6729ea581dcd9b4238eee9ca4d3bd89",
      "sourceName": "node_modules/forge-std/src/mocks/MockERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "IERC721TokenReceiver": {
          "0.8.23+commit.f704f362.Windows.msvc": "MockERC721.sol\\IERC721TokenReceiver.json"
        },
        "MockERC721": {
          "0.8.23+commit.f704f362.Windows.msvc": "MockERC721.sol\\MockERC721.json"
        }
      }
    },
    "node_modules/forge-std/src/safeconsole.sol": {
      "lastModificationDate": 1713235587392,
      "contentHash": "ac3b1bf5a444db5db3656021830258a8",
      "sourceName": "node_modules/forge-std/src/safeconsole.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "safeconsole": {
          "0.8.23+commit.f704f362.Windows.msvc": "safeconsole.sol\\safeconsole.json"
        }
      }
    },
    "script/IPHolderRegistrar.s.sol": {
      "lastModificationDate": 1713708040704,
      "contentHash": "5b6428af5e1ab6bbbe9f644245eb3cad",
      "sourceName": "script/IPHolderRegistrar.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@ethsign\\sign-protocol-evm/src/core/SP.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/interfaces/ISP.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/ISPGlobalHook.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/Attestation.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/DataLocation.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/Schema.sol",
        "node_modules/@openzeppelin\\contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/access/Ownable.sol",
        "node_modules/@openzeppelin\\contracts/interfaces/IERC1271.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol",
        "node_modules/@openzeppelin\\contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
        "node_modules/@openzeppelin\\contracts/proxy/Clones.sol",
        "node_modules/@openzeppelin\\contracts/proxy/ERC1967/ERC1967Utils.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/ERC20.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/ERC721.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin\\contracts/utils/Base64.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin\\contracts/utils/ReentrancyGuard.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin\\contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "node_modules/@openzeppelin\\contracts/utils/cryptography/MessageHashUtils.sol",
        "node_modules/@openzeppelin\\contracts/utils/cryptography/SignatureChecker.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/@openzeppelin\\contracts/utils/structs/EnumerableSet.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol",
        "node_modules/@story-protocol/protocol-core/contracts/governance/Governable.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/IAccessController.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernance.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/IRegistrationModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IHookModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/dispute/IDisputeModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/ILicensingModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/IPILPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/IRoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAssetRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/ILicenseRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IModuleRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProvider.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProviderMigratable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IKeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IResolver.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/DataUniqueness.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/IP.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/Licensing.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/PILFrameworkErrors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/modules/RegistrationModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/BasePolicyFrameworkManager.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/modules/licensing/LicensingModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/LicensingModuleAware.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/modules/licensing/PILPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/parameter-helpers/LicensorApprovalChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/royalty/RoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/IPAccountRegistry.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/registries/IPAssetRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/metadata/MetadataProviderBase.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/metadata/MetadataProviderV1.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/resolvers/IPResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/KeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/ResolverBase.sol",
        "node_modules/@story-protocol\\protocol-periphery/contracts/StoryProtocolGateway.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolDrop.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolGateway.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolToken.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721MetadataProvider.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721SPNFT.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Metadata.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/SPG.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721Cloneable.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721MetadataProvider.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721SPNFT.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721SPNFTFactory.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol",
        "node_modules/erc6551\\interfaces/IERC6551Registry.sol",
        "node_modules/forge-std/src/Base.sol",
        "node_modules/forge-std/src\\Script.sol",
        "node_modules/forge-std/src/StdChains.sol",
        "node_modules/forge-std/src/StdCheats.sol",
        "node_modules/forge-std/src\\StdJson.sol",
        "node_modules/forge-std/src/StdMath.sol",
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/StdStyle.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/console2.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/forge-std/src/mocks/MockERC20.sol",
        "node_modules/forge-std/src/mocks/MockERC721.sol",
        "node_modules/forge-std/src/safeconsole.sol",
        "script\\JsonDeploymentHandler.sol",
        "script\\StringUtil.sol",
        "src\\ip\\ERC6551Account.sol",
        "src\\ip\\IIPHolder.sol",
        "src\\ip\\IIPHolderRegistrar.sol",
        "src\\ip\\IPHolder.sol",
        "src\\ip\\IPHolderRegistrar.sol",
        "src\\nft\\NFT.sol",
        "src\\sign\\IIPLicensingAttestation.sol",
        "src\\sign\\IPLicensingAttestation.sol",
        "src\\token\\Token.sol",
        "src\\utils\\IPHolderData.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "IPHolderRegistrarScript": {
          "0.8.23+commit.f704f362.Windows.msvc": "IPHolderRegistrar.s.sol\\IPHolderRegistrarScript.json"
        }
      }
    },
    "script/JsonDeploymentHandler.sol": {
      "lastModificationDate": 1713707328991,
      "contentHash": "a9369eb805695698afa01a5c24cfb1a2",
      "sourceName": "script/JsonDeploymentHandler.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/forge-std/src/Base.sol",
        "node_modules/forge-std/src\\Script.sol",
        "node_modules/forge-std/src/StdChains.sol",
        "node_modules/forge-std/src/StdCheats.sol",
        "node_modules/forge-std/src\\StdJson.sol",
        "node_modules/forge-std/src/StdMath.sol",
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/StdStyle.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/console2.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/forge-std/src/mocks/MockERC20.sol",
        "node_modules/forge-std/src/mocks/MockERC721.sol",
        "node_modules/forge-std/src/safeconsole.sol",
        "script\\StringUtil.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "JsonDeploymentHandler": {
          "0.8.23+commit.f704f362.Windows.msvc": "JsonDeploymentHandler.sol\\JsonDeploymentHandler.json"
        }
      }
    },
    "script/StringUtil.sol": {
      "lastModificationDate": 1713707315880,
      "contentHash": "72b70cf205c2b96c659d24df1096f6f3",
      "sourceName": "script/StringUtil.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "StringUtil": {
          "0.8.23+commit.f704f362.Windows.msvc": "StringUtil.sol\\StringUtil.json"
        }
      }
    },
    "src/ip/ERC6551Account.sol": {
      "lastModificationDate": 1713696290673,
      "contentHash": "7564ba9a332f812a932e628e18c0859a",
      "sourceName": "src/ip/ERC6551Account.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/interfaces/IERC1271.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/ERC20.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "node_modules/@openzeppelin\\contracts/utils/cryptography/SignatureChecker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC6551Account": {
          "0.8.23+commit.f704f362.Windows.msvc": "ERC6551Account.sol\\ERC6551Account.json"
        },
        "IERC6551Account": {
          "0.8.23+commit.f704f362.Windows.msvc": "ERC6551Account.sol\\IERC6551Account.json"
        },
        "IERC6551Executable": {
          "0.8.23+commit.f704f362.Windows.msvc": "ERC6551Account.sol\\IERC6551Executable.json"
        }
      }
    },
    "src/ip/IIPHolder.sol": {
      "lastModificationDate": 1713695237206,
      "contentHash": "71d15cd0b35fa8ff54a17a63319410fa",
      "sourceName": "src/ip/IIPHolder.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/interfaces/IERC1271.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/ERC20.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "node_modules/@openzeppelin\\contracts/utils/cryptography/SignatureChecker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/IPILPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPolicyFrameworkManager.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/IP.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/Licensing.sol",
        "src\\ip\\ERC6551Account.sol",
        "src\\utils\\IPHolderData.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "IIPHolder": {
          "0.8.23+commit.f704f362.Windows.msvc": "IIPHolder.sol\\IIPHolder.json"
        }
      }
    },
    "src/ip/IIPHolderRegistrar.sol": {
      "lastModificationDate": 1713695044537,
      "contentHash": "ea9f20a91036a91be55a8c56ce4802ec",
      "sourceName": "src/ip/IIPHolderRegistrar.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@ethsign\\sign-protocol-evm/src/interfaces/ISP.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/Attestation.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/DataLocation.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/Schema.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/interfaces/IERC1271.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
        "node_modules/@openzeppelin\\contracts/proxy/Clones.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/ERC20.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/ERC721.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "node_modules/@openzeppelin\\contracts/utils/Base64.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin\\contracts/utils/ReentrancyGuard.sol",
        "node_modules/@openzeppelin\\contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "node_modules/@openzeppelin\\contracts/utils/cryptography/SignatureChecker.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/@openzeppelin\\contracts/utils/structs/EnumerableSet.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol",
        "node_modules/@story-protocol/protocol-core/contracts/governance/Governable.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/IAccessController.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernance.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/IRegistrationModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IHookModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/dispute/IDisputeModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/ILicensingModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/IPILPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/IRoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAssetRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/ILicenseRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IModuleRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProvider.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProviderMigratable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IKeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IResolver.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/DataUniqueness.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/IP.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/Licensing.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/PILFrameworkErrors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/modules/RegistrationModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/BasePolicyFrameworkManager.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/modules/licensing/LicensingModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/LicensingModuleAware.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/modules/licensing/PILPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/parameter-helpers/LicensorApprovalChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/royalty/RoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/IPAccountRegistry.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/registries/IPAssetRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/metadata/MetadataProviderBase.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/metadata/MetadataProviderV1.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/resolvers/IPResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/KeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/ResolverBase.sol",
        "node_modules/@story-protocol\\protocol-periphery/contracts/StoryProtocolGateway.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolDrop.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolGateway.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolToken.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721MetadataProvider.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721SPNFT.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Metadata.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/SPG.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721Cloneable.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721MetadataProvider.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721SPNFT.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721SPNFTFactory.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol",
        "node_modules/erc6551\\interfaces/IERC6551Registry.sol",
        "src\\ip\\ERC6551Account.sol",
        "src\\ip\\IIPHolder.sol",
        "src\\ip\\IPHolder.sol",
        "src\\sign\\IIPLicensingAttestation.sol",
        "src\\utils\\IPHolderData.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "IIPHolderRegistrar": {
          "0.8.23+commit.f704f362.Windows.msvc": "IIPHolderRegistrar.sol\\IIPHolderRegistrar.json"
        }
      }
    },
    "src/ip/IPHolder.sol": {
      "lastModificationDate": 1713707440684,
      "contentHash": "06bdd0f17f8d2838961a7a5ebeb0ef4d",
      "sourceName": "src/ip/IPHolder.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@ethsign\\sign-protocol-evm/src/interfaces/ISP.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/Attestation.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/DataLocation.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/Schema.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/interfaces/IERC1271.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
        "node_modules/@openzeppelin\\contracts/proxy/Clones.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/ERC20.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/ERC721.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "node_modules/@openzeppelin\\contracts/utils/Base64.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin\\contracts/utils/ReentrancyGuard.sol",
        "node_modules/@openzeppelin\\contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "node_modules/@openzeppelin\\contracts/utils/cryptography/SignatureChecker.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/@openzeppelin\\contracts/utils/structs/EnumerableSet.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol",
        "node_modules/@story-protocol/protocol-core/contracts/governance/Governable.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/IAccessController.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernance.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/IRegistrationModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IHookModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/dispute/IDisputeModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/ILicensingModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/IPILPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/IRoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAssetRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/ILicenseRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IModuleRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProvider.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProviderMigratable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IKeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IResolver.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/DataUniqueness.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/IP.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/Licensing.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/PILFrameworkErrors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/modules/RegistrationModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/BasePolicyFrameworkManager.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/modules/licensing/LicensingModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/LicensingModuleAware.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/modules/licensing/PILPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/parameter-helpers/LicensorApprovalChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/royalty/RoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/IPAccountRegistry.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/registries/IPAssetRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/metadata/MetadataProviderBase.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/metadata/MetadataProviderV1.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/resolvers/IPResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/KeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/ResolverBase.sol",
        "node_modules/@story-protocol\\protocol-periphery/contracts/StoryProtocolGateway.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolDrop.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolGateway.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolToken.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721MetadataProvider.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721SPNFT.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Metadata.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/SPG.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721Cloneable.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721MetadataProvider.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721SPNFT.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721SPNFTFactory.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol",
        "node_modules/erc6551\\interfaces/IERC6551Registry.sol",
        "src\\ip\\ERC6551Account.sol",
        "src\\ip\\IIPHolder.sol",
        "src\\sign\\IIPLicensingAttestation.sol",
        "src\\utils\\IPHolderData.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "IPHolder": {
          "0.8.23+commit.f704f362.Windows.msvc": "IPHolder.sol\\IPHolder.json"
        }
      }
    },
    "src/ip/IPHolderRegistrar.sol": {
      "lastModificationDate": 1713695007253,
      "contentHash": "ce1eed05173d88d15c851caa6065da4e",
      "sourceName": "src/ip/IPHolderRegistrar.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@ethsign\\sign-protocol-evm/src/interfaces/ISP.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/Attestation.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/DataLocation.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/Schema.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/interfaces/IERC1271.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
        "node_modules/@openzeppelin\\contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
        "node_modules/@openzeppelin\\contracts/proxy/Clones.sol",
        "node_modules/@openzeppelin\\contracts/proxy/ERC1967/ERC1967Utils.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/ERC20.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/ERC721.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin\\contracts/utils/Base64.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin\\contracts/utils/ReentrancyGuard.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin\\contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "node_modules/@openzeppelin\\contracts/utils/cryptography/SignatureChecker.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/@openzeppelin\\contracts/utils/structs/EnumerableSet.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol",
        "node_modules/@story-protocol/protocol-core/contracts/governance/Governable.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/IAccessController.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernance.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/IRegistrationModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IHookModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/dispute/IDisputeModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/ILicensingModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/IPILPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/IRoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAssetRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/ILicenseRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IModuleRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProvider.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProviderMigratable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IKeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IResolver.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/DataUniqueness.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/IP.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/Licensing.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/PILFrameworkErrors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/modules/RegistrationModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/BasePolicyFrameworkManager.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/modules/licensing/LicensingModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/LicensingModuleAware.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/modules/licensing/PILPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/parameter-helpers/LicensorApprovalChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/royalty/RoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/IPAccountRegistry.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/registries/IPAssetRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/metadata/MetadataProviderBase.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/metadata/MetadataProviderV1.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/resolvers/IPResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/KeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/ResolverBase.sol",
        "node_modules/@story-protocol\\protocol-periphery/contracts/StoryProtocolGateway.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolDrop.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolGateway.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolToken.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721MetadataProvider.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721SPNFT.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Metadata.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/SPG.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721Cloneable.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721MetadataProvider.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721SPNFT.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721SPNFTFactory.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol",
        "node_modules/erc6551\\interfaces/IERC6551Registry.sol",
        "src\\ip\\ERC6551Account.sol",
        "src\\ip\\IIPHolder.sol",
        "src\\ip\\IIPHolderRegistrar.sol",
        "src\\ip\\IPHolder.sol",
        "src\\sign\\IIPLicensingAttestation.sol",
        "src\\utils\\IPHolderData.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "IPHolderRegistrar": {
          "0.8.23+commit.f704f362.Windows.msvc": "IPHolderRegistrar.sol\\IPHolderRegistrar.json"
        }
      }
    },
    "src/nft/NFT.sol": {
      "lastModificationDate": 1713707453418,
      "contentHash": "03fa6a2ba8bb0f6d5d1da1fa679efea6",
      "sourceName": "src/nft/NFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/ERC721.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin\\contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "NFT": {
          "0.8.23+commit.f704f362.Windows.msvc": "NFT.sol\\NFT.json"
        }
      }
    },
    "src/sign/IIPLicensingAttestation.sol": {
      "lastModificationDate": 1713695619254,
      "contentHash": "ef193cb79473390b2f05540c8a0c9ef4",
      "sourceName": "src/sign/IIPLicensingAttestation.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@ethsign\\sign-protocol-evm/src/interfaces/ISP.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/Attestation.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/DataLocation.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/Schema.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "IIPLicensingAttestation": {
          "0.8.23+commit.f704f362.Windows.msvc": "IIPLicensingAttestation.sol\\IIPLicensingAttestation.json"
        }
      }
    },
    "src/sign/IPLicensingAttestation.sol": {
      "lastModificationDate": 1713695652437,
      "contentHash": "a82dc793676cf91a156a8cedaaaf2b89",
      "sourceName": "src/sign/IPLicensingAttestation.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@ethsign\\sign-protocol-evm/src/interfaces/ISP.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/Attestation.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/DataLocation.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/Schema.sol",
        "node_modules/@openzeppelin\\contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/access/Ownable.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "src\\sign\\IIPLicensingAttestation.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "IPLicensingAttestation": {
          "0.8.23+commit.f704f362.Windows.msvc": "IPLicensingAttestation.sol\\IPLicensingAttestation.json"
        }
      }
    },
    "src/test/IPHolderTest.t.sol": {
      "lastModificationDate": 1713695382225,
      "contentHash": "35bdde3714efa04f335dc44fcd33e0f7",
      "sourceName": "src/test/IPHolderTest.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@ethsign\\sign-protocol-evm/src/core/SP.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/interfaces/ISP.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/ISPGlobalHook.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/Attestation.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/DataLocation.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/Schema.sol",
        "node_modules/@openzeppelin\\contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/access/Ownable.sol",
        "node_modules/@openzeppelin\\contracts/interfaces/IERC1271.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol",
        "node_modules/@openzeppelin\\contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
        "node_modules/@openzeppelin\\contracts/proxy/Clones.sol",
        "node_modules/@openzeppelin\\contracts/proxy/ERC1967/ERC1967Utils.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/ERC20.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/ERC721.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin\\contracts/utils/Base64.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin\\contracts/utils/ReentrancyGuard.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin\\contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "node_modules/@openzeppelin\\contracts/utils/cryptography/MessageHashUtils.sol",
        "node_modules/@openzeppelin\\contracts/utils/cryptography/SignatureChecker.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/@openzeppelin\\contracts/utils/structs/EnumerableSet.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol",
        "node_modules/@story-protocol/protocol-core/contracts/governance/Governable.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/IAccessController.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernance.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/IRegistrationModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IHookModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/dispute/IDisputeModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/ILicensingModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/IPILPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/IRoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAssetRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/ILicenseRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IModuleRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProvider.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProviderMigratable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IKeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IResolver.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/DataUniqueness.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/IP.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/Licensing.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/PILFlavors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/PILFrameworkErrors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/modules/RegistrationModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/BasePolicyFrameworkManager.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/modules/licensing/LicensingModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/LicensingModuleAware.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/modules/licensing/PILPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/parameter-helpers/LicensorApprovalChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/royalty/RoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/IPAccountRegistry.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/registries/IPAssetRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/metadata/MetadataProviderBase.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/metadata/MetadataProviderV1.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/resolvers/IPResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/KeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/ResolverBase.sol",
        "node_modules/@story-protocol\\protocol-periphery/contracts/StoryProtocolGateway.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolDrop.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolGateway.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolToken.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721MetadataProvider.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721SPNFT.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Metadata.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/SPG.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721Cloneable.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721MetadataProvider.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721SPNFT.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721SPNFTFactory.sol",
        "node_modules/ds-test/src\\test.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol",
        "node_modules/erc6551\\interfaces/IERC6551Registry.sol",
        "node_modules/forge-std/src/Base.sol",
        "node_modules/forge-std/src/StdAssertions.sol",
        "node_modules/forge-std/src/StdChains.sol",
        "node_modules/forge-std/src/StdCheats.sol",
        "node_modules/forge-std/src/StdError.sol",
        "node_modules/forge-std/src/StdInvariant.sol",
        "node_modules/forge-std/src\\StdJson.sol",
        "node_modules/forge-std/src/StdMath.sol",
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/StdStyle.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src\\Test.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/console2.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/forge-std/src/mocks/MockERC20.sol",
        "node_modules/forge-std/src/mocks/MockERC721.sol",
        "node_modules/forge-std/src/safeconsole.sol",
        "src\\ip\\ERC6551Account.sol",
        "src\\ip\\IIPHolder.sol",
        "src\\ip\\IIPHolderRegistrar.sol",
        "src\\ip\\IPHolder.sol",
        "src\\ip\\IPHolderRegistrar.sol",
        "src\\nft\\NFT.sol",
        "src\\sign\\IIPLicensingAttestation.sol",
        "src\\sign\\IPLicensingAttestation.sol",
        "src\\test\\base\\IPHolderBaseTest.t.sol",
        "src\\token\\Token.sol",
        "src\\utils\\IPHolderData.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "IPHolderRegistrarTest": {
          "0.8.23+commit.f704f362.Windows.msvc": "IPHolderTest.t.sol\\IPHolderRegistrarTest.json"
        }
      }
    },
    "src/test/base/IPHolderBaseTest.t.sol": {
      "lastModificationDate": 1713707578336,
      "contentHash": "c88de08349c3e7a460640b3cf60019bc",
      "sourceName": "src/test/base/IPHolderBaseTest.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@ethsign\\sign-protocol-evm/src/core/SP.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/interfaces/ISP.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/ISPGlobalHook.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/ISPHook.sol",
        "node_modules/@ethsign/sign-protocol-evm/src/interfaces/IVersionable.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/Attestation.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/DataLocation.sol",
        "node_modules/@ethsign\\sign-protocol-evm/src/models/Schema.sol",
        "node_modules/@openzeppelin\\contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin\\contracts/access/Ownable.sol",
        "node_modules/@openzeppelin\\contracts/interfaces/IERC1271.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol",
        "node_modules/@openzeppelin\\contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
        "node_modules/@openzeppelin\\contracts/proxy/Clones.sol",
        "node_modules/@openzeppelin\\contracts/proxy/ERC1967/ERC1967Utils.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/ERC20.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/ERC721.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin\\contracts/utils/Base64.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin\\contracts/utils/ReentrancyGuard.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin\\contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "node_modules/@openzeppelin\\contracts/utils/cryptography/MessageHashUtils.sol",
        "node_modules/@openzeppelin\\contracts/utils/cryptography/SignatureChecker.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/@openzeppelin\\contracts/utils/structs/EnumerableSet.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin\\contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/access/AccessControlled.sol",
        "node_modules/@story-protocol/protocol-core/contracts/governance/Governable.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/IAccessController.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/IIPAccount.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/governance/IGovernance.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/IRegistrationModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IHookModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/base/IModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/dispute/IDisputeModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/ILicensingModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/IPILPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/IRoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IRoyaltyPolicy.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAccountRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IIPAssetRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/ILicenseRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/IModuleRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProvider.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/registries/metadata/IMetadataProviderMigratable.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IKeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/resolvers/IResolver.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/AccessPermission.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/DataUniqueness.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/GovernanceLib.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/IP.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/Licensing.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/PILFlavors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/PILFrameworkErrors.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/modules/Module.sol",
        "node_modules/@story-protocol/protocol-core/contracts/lib/registries/IPAccountChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/BaseModule.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/modules/RegistrationModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/BasePolicyFrameworkManager.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/modules/licensing/LicensingModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/LicensingModuleAware.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/modules/licensing/PILPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/licensing/parameter-helpers/LicensorApprovalChecker.sol",
        "node_modules/@story-protocol/protocol-core/contracts/modules/royalty/RoyaltyModule.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/IPAccountRegistry.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/registries/IPAssetRegistry.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/metadata/MetadataProviderBase.sol",
        "node_modules/@story-protocol/protocol-core/contracts/registries/metadata/MetadataProviderV1.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/resolvers/IPResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/KeyValueResolver.sol",
        "node_modules/@story-protocol/protocol-core/contracts/resolvers/ResolverBase.sol",
        "node_modules/@story-protocol\\protocol-periphery/contracts/StoryProtocolGateway.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolDrop.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolGateway.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/IStoryProtocolToken.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721MetadataProvider.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/interfaces/nft/IERC721SPNFT.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Errors.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/Metadata.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/lib/SPG.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721Cloneable.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721MetadataProvider.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721SPNFT.sol",
        "node_modules/@story-protocol/protocol-periphery/contracts/nft/ERC721SPNFTFactory.sol",
        "node_modules/ds-test/src\\test.sol",
        "node_modules/erc6551\\interfaces/IERC6551Account.sol",
        "node_modules/erc6551\\interfaces/IERC6551Registry.sol",
        "node_modules/forge-std/src/Base.sol",
        "node_modules/forge-std/src/StdAssertions.sol",
        "node_modules/forge-std/src/StdChains.sol",
        "node_modules/forge-std/src/StdCheats.sol",
        "node_modules/forge-std/src/StdError.sol",
        "node_modules/forge-std/src/StdInvariant.sol",
        "node_modules/forge-std/src\\StdJson.sol",
        "node_modules/forge-std/src/StdMath.sol",
        "node_modules/forge-std/src/StdStorage.sol",
        "node_modules/forge-std/src/StdStyle.sol",
        "node_modules/forge-std/src/StdUtils.sol",
        "node_modules/forge-std/src\\Test.sol",
        "node_modules/forge-std/src/Vm.sol",
        "node_modules/forge-std/src/console.sol",
        "node_modules/forge-std/src/console2.sol",
        "node_modules/forge-std/src/interfaces/IMulticall3.sol",
        "node_modules/forge-std/src/mocks/MockERC20.sol",
        "node_modules/forge-std/src/mocks/MockERC721.sol",
        "node_modules/forge-std/src/safeconsole.sol",
        "src\\ip\\ERC6551Account.sol",
        "src\\ip\\IIPHolder.sol",
        "src\\ip\\IIPHolderRegistrar.sol",
        "src\\ip\\IPHolder.sol",
        "src\\ip\\IPHolderRegistrar.sol",
        "src\\nft\\NFT.sol",
        "src\\sign\\IIPLicensingAttestation.sol",
        "src\\sign\\IPLicensingAttestation.sol",
        "src\\token\\Token.sol",
        "src\\utils\\IPHolderData.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "IPHolderBaseTest": {
          "0.8.23+commit.f704f362.Windows.msvc": "IPHolderBaseTest.t.sol\\IPHolderBaseTest.json"
        }
      }
    },
    "src/token/Token.sol": {
      "lastModificationDate": 1713694547004,
      "contentHash": "18d50cbda672989f5c63f7234e4f8078",
      "sourceName": "src/token/Token.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/ERC20.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "Token": {
          "0.8.23+commit.f704f362.Windows.msvc": "Token.sol\\Token.json"
        }
      }
    },
    "src/utils/IPHolderData.sol": {
      "lastModificationDate": 1713695193237,
      "contentHash": "0c509495992b6c524894fa500dc499b6",
      "sourceName": "src/utils/IPHolderData.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 50
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "none",
            "appendCBOR": false
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata",
                "storageLayout"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin\\contracts/interfaces/IERC1271.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/ERC20.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "node_modules/@openzeppelin\\contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "node_modules/@openzeppelin\\contracts/utils/cryptography/SignatureChecker.sol",
        "node_modules/@openzeppelin\\contracts/utils/introspection/IERC165.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/interfaces/modules/licensing/IPILPolicyFrameworkManager.sol",
        "node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPolicyFrameworkManager.sol",
        "node_modules/@story-protocol\\protocol-core/contracts/lib/Licensing.sol",
        "src\\ip\\ERC6551Account.sol"
      ],
      "versionRequirement": "^0.8.23",
      "artifacts": {
        "IPHolderData": {
          "0.8.23+commit.f704f362.Windows.msvc": "IPHolderData.sol\\IPHolderData.json"
        }
      }
    }
  }
}